{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Downloads\\\\blogpost-main\\\\blogpost-main\\\\blog-frontend\\\\src\\\\components\\\\UpdatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './styles/UpdatePost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePost = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [author, setAuthor] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentImage, setCurrentImage] = useState(null); // Holds the Cloudinary URL\n\n  // Fetch existing post data to populate the form\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/blog/posts/${id}`).then(response => {\n      setTitle(response.data.title);\n      setContent(response.data.content);\n      setAuthor(response.data.author);\n      setCurrentImage(response.data.image); // Set Cloudinary image URL\n    }).catch(error => console.error(error));\n  }, [id]);\n\n  // Handle image file selection\n  const handleImageChange = e => {\n    setImage(e.target.files[0]); // Prepare image for upload\n  };\n\n  // Submit the updated form\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('content', content);\n    formData.append('author', author);\n    if (image) {\n      formData.append('image', image); // Only append the new image if one is selected\n    }\n    try {\n      await axios.put(`http://localhost:5000/api/blog/posts/${id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      navigate(`/posts/${id}`); // Navigate to the updated post after successful submission\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"update-post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: author,\n        onChange: e => setAuthor(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), currentImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentImage // Display the Cloudinary-hosted image\n          ,\n          alt: \"Current Post\",\n          style: {\n            width: '100%',\n            maxHeight: '200px',\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePost, \"3SQFFBZSuPZ/Zu1/SX9Np3iojKI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdatePost;\nexport default UpdatePost;\nvar _c;\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","useNavigate","jsxDEV","_jsxDEV","UpdatePost","_s","id","navigate","title","setTitle","content","setContent","author","setAuthor","image","setImage","currentImage","setCurrentImage","get","then","response","data","catch","error","console","handleImageChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","put","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","required","src","alt","style","width","maxHeight","objectFit","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Downloads/blogpost-main/blogpost-main/blog-frontend/src/components/UpdatePost.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './styles/UpdatePost.css';\n\nconst UpdatePost = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [author, setAuthor] = useState('');\n  const [image, setImage] = useState(null);\n  const [currentImage, setCurrentImage] = useState(null); // Holds the Cloudinary URL\n\n  // Fetch existing post data to populate the form\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/blog/posts/${id}`)\n      .then(response => {\n        setTitle(response.data.title);\n        setContent(response.data.content);\n        setAuthor(response.data.author);\n        setCurrentImage(response.data.image); // Set Cloudinary image URL\n      })\n      .catch(error => console.error(error));\n  }, [id]);\n\n  // Handle image file selection\n  const handleImageChange = (e) => {\n    setImage(e.target.files[0]); // Prepare image for upload\n  };\n\n  // Submit the updated form\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('content', content);\n    formData.append('author', author);\n    if (image) {\n      formData.append('image', image); // Only append the new image if one is selected\n    }\n\n    try {\n      await axios.put(`http://localhost:5000/api/blog/posts/${id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      navigate(`/posts/${id}`); // Navigate to the updated post after successful submission\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"update-post-container\">\n      <h2>Update Post</h2>\n      <form onSubmit={handleSubmit} className=\"update-post-form\">\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n        <textarea value={content} onChange={(e) => setContent(e.target.value)} required></textarea>\n        <input type=\"text\" value={author} onChange={(e) => setAuthor(e.target.value)} required />\n        \n        {currentImage && (\n          <div>\n            <img\n              src={currentImage} // Display the Cloudinary-hosted image\n              alt=\"Current Post\"\n              style={{ width: '100%', maxHeight: '200px', objectFit: 'cover' }}\n            />\n          </div>\n        )}\n        \n        <input type=\"file\" onChange={handleImageChange} />\n        <button type=\"submit\">Update Post</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdatePost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}